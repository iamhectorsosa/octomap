{
  "database": {
    "sql": {
      "migrations": {
        "0001_schema.sql": "-- +goose Up\nCREATE TABLE IF NOT EXISTS players (\n    id TEXT PRIMARY KEY,\n    email TEXT UNIQUE NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS teams (\n    id INTEGER PRIMARY KEY,\n    player_1 TEXT NOT NULL,\n    player_2 TEXT NOT NULL,\n    score INTEGER NOT NULL,\n    FOREIGN KEY (player_1) REFERENCES players (id) ON DELETE CASCADE,\n    FOREIGN KEY (player_2) REFERENCES players (id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS matches (\n    id INTEGER PRIMARY KEY,\n    team_a INTEGER NOT NULL,\n    team_b INTEGER NOT NULL,\n    FOREIGN KEY (team_a) REFERENCES teams (id) ON DELETE CASCADE,\n    FOREIGN KEY (team_b) REFERENCES teams (id) ON DELETE CASCADE\n);\n",
        "0002_seed.sql": "-- +goose Up\nINSERT INTO players (id, email) VALUES\n('player1', 'player1@example.com'),\n('player2', 'player2@example.com'),\n('player3', 'player3@example.com'),\n('player4', 'player4@example.com');\n\nINSERT INTO teams (player_1, player_2, score) VALUES\n('player1', 'player2', 7),\n('player3', 'player4', 3);\n\nINSERT INTO matches (team_a, team_b) VALUES\n(1, 2);\n"
      },
      "queries": {
        "queries.sql": "-- name: AddPlayer :exec\nINSERT INTO players (id, email) VALUES (?, ?);\n\n-- name: AddTeam :one\nINSERT INTO teams (player_1, player_2, score) VALUES (?, ?, ?) RETURNING *;\n\n-- name: AddMatch :exec\nINSERT INTO matches (team_a, team_b) VALUES (?, ?);\n\n-- name: GetPlayers :many\nSELECT\n    p.id,\n    p.email,\n    CAST(SUM(COALESCE(t.score, 0)) AS INTEGER) AS score\nFROM players AS p\nLEFT JOIN teams AS t\n    ON p.id IN (t.player_1, t.player_2)\nGROUP BY p.id\nORDER BY score DESC;\n"
      }
    }
  }
}
